/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package forme;

import communication.KontrolerKorisnickogInterfejsa;
import communication.Response;
import domain.Dokument;
import domain.Profesor;
import domain.Student;
import domain.TerminCasa;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import model.DokumentTableModel;

/**
 *
 * @author Hrckok
 */
public class IzmeniTermin extends javax.swing.JDialog {

    private ViewZakazaniTermini parentForm;
    private Student ucitanStudent;
    private Profesor ucitanProfesor;
    private List<Student> studenti;
    private List<Profesor> profesori;
    private List<Dokument> dokumenti;
    private List<Dokument> stariDokumenti;
    private TerminCasa zakazanTermin;
    SimpleDateFormat format = new SimpleDateFormat("dd-MM-yyyy");

    /**
     * Creates new form IzmeniTermin
     */
    public IzmeniTermin(java.awt.Frame parent, boolean modal, TerminCasa terminLoaded, ViewZakazaniTermini parentForm) {
        super(parent, modal);
        initComponents();
        this.parentForm = parentForm;
        setLocationRelativeTo(null);
        this.zakazanTermin = terminLoaded;
        Dokument dokument = new Dokument();
        dokument.setTerminCasa(terminLoaded);
        this.stariDokumenti = KontrolerKorisnickogInterfejsa.getInstance().ucitajDokumenteUslov(dokument);
        zakazanTermin.setDokumenti(stariDokumenti);
        System.out.println(zakazanTermin);

        System.out.println("Stara dokumenta:" + stariDokumenti);
        prepareForm();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblDocuments = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextPaneKomentar = new javax.swing.JTextPane();
        jBtnFilterProfessor = new javax.swing.JButton();
        jBtnFilterStudent = new javax.swing.JButton();
        jComboBoxProfessor = new javax.swing.JComboBox();
        jLabel4 = new javax.swing.JLabel();
        jComboBoxStudent = new javax.swing.JComboBox();
        jLabel5 = new javax.swing.JLabel();
        jButtonSave = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jButtonAddDocument = new javax.swing.JButton();
        jTextNaslov = new javax.swing.JTextField();
        jTextDate = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jButtonDeleteDocument = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        tblDocuments.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tblDocuments);

        jLabel2.setText("PROFESOR");

        jScrollPane2.setViewportView(jTextPaneKomentar);

        jBtnFilterProfessor.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jBtnFilterProfessor.setText("VIDI SVE");
        jBtnFilterProfessor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnFilterProfessorActionPerformed(evt);
            }
        });

        jBtnFilterStudent.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jBtnFilterStudent.setText("VIDI SVE");
        jBtnFilterStudent.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnFilterStudentActionPerformed(evt);
            }
        });

        jComboBoxProfessor.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel4.setText("NAZIV LEKCIJE");

        jComboBoxStudent.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jComboBoxStudent.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxStudentActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel5.setText("DOKUMENTI");

        jButtonSave.setText("IZMENI TERMIN");
        jButtonSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSaveActionPerformed(evt);
            }
        });

        jLabel3.setText("DATUM TERMINA");

        jButtonAddDocument.setText("DODAJ DOKUMENT");
        jButtonAddDocument.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAddDocumentActionPerformed(evt);
            }
        });

        jLabel1.setText("STUDENT");

        jButtonDeleteDocument.setText("IZBRISI DOKUMENT");
        jButtonDeleteDocument.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDeleteDocumentActionPerformed(evt);
            }
        });

        jLabel6.setText("COMMENT");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 265, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(0, 0, Short.MAX_VALUE)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jTextNaslov, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGroup(layout.createSequentialGroup()
                                                .addGap(86, 86, 86)
                                                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(0, 0, Short.MAX_VALUE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 191, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jButtonDeleteDocument, javax.swing.GroupLayout.DEFAULT_SIZE, 190, Short.MAX_VALUE)
                                            .addComponent(jButtonAddDocument, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jComboBoxStudent, 0, 397, Short.MAX_VALUE)
                                    .addComponent(jComboBoxProfessor, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jTextDate, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jBtnFilterProfessor)
                            .addComponent(jBtnFilterStudent)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(31, 31, 31)
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 193, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jButtonSave, javax.swing.GroupLayout.PREFERRED_SIZE, 241, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jComboBoxStudent, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jBtnFilterStudent, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jBtnFilterProfessor, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jComboBoxProfessor, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextDate, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(68, 68, 68)
                        .addComponent(jLabel5))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(200, 200, 200)
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextNaslov, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(7, 7, 7)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 64, Short.MAX_VALUE)
                        .addComponent(jButtonDeleteDocument, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButtonAddDocument, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(150, 150, 150))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 203, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 243, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(28, 28, 28)))
                .addComponent(jButtonSave, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jBtnFilterProfessorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnFilterProfessorActionPerformed
        ViewProfesoriZaTermin pz = new ViewProfesoriZaTermin(this, true);
        pz.setVisible(true);
        ucitanProfesor = pz.getUcitanProfesor();
        pz.dispose();
        if (ucitanProfesor != null) {
            jComboBoxProfessor.setSelectedItem(ucitanProfesor);
        }
    }//GEN-LAST:event_jBtnFilterProfessorActionPerformed

    private void jBtnFilterStudentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnFilterStudentActionPerformed
        ViewStudentiZaTermin d = new ViewStudentiZaTermin(this, true);
        d.setVisible(true);
        ucitanStudent = d.getUcitanStudent();
        d.dispose();
        if (ucitanStudent != null) {
            jComboBoxStudent.setSelectedItem(ucitanStudent);
        }
    }//GEN-LAST:event_jBtnFilterStudentActionPerformed

    private void jComboBoxStudentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxStudentActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBoxStudentActionPerformed

    private void jButtonAddDocumentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAddDocumentActionPerformed

        Dokument d = new Dokument();
        String naslov = jTextNaslov.getText().trim();
        String komentar = jTextPaneKomentar.getText().trim();
        if (naslov.equals("") || komentar.equals("")) {
            JOptionPane.showMessageDialog(this, "Popunite sva polja !");
            return;
        }
        DokumentTableModel model = (DokumentTableModel) tblDocuments.getModel();
        List<Dokument> dokumenti = model.getDocuments();
        boolean add = true;
        if (dokumenti != null) {
            for (Dokument dokument : dokumenti) {
                if (dokument.getKomentar().equals(komentar) || dokument.getNaslov().equals(naslov)) {
                    add = false;
                    //                    model.fireTableDataChanged();
                    JOptionPane.showMessageDialog(this, "Dokument sa datim naslovom i komentarom vec postoji!");

                    break;
                }
            }
        }
        if (add) {
            d.setKomentar(komentar);
            d.setNaslov(naslov);
            d.setTerminCasa(zakazanTermin);

            model.add(d);
            jTextNaslov.setText("");
            jTextPaneKomentar.setText("");
        }

    }//GEN-LAST:event_jButtonAddDocumentActionPerformed

    private void jButtonDeleteDocumentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDeleteDocumentActionPerformed
        int row = tblDocuments.getSelectedRow();
        DokumentTableModel model = (DokumentTableModel) tblDocuments.getModel();
        model.delete(row);
    }//GEN-LAST:event_jButtonDeleteDocumentActionPerformed

    private void jButtonSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSaveActionPerformed
        try {
            DokumentTableModel model = (DokumentTableModel) tblDocuments.getModel();
            if (dokumenti == null) {
                dokumenti = new ArrayList<>();
            }

            for (Dokument document : model.getDocuments()) {
                dokumenti.add((Dokument) document);
            }
            Student s = (Student) jComboBoxStudent.getSelectedItem();
            Profesor p = (Profesor) jComboBoxProfessor.getSelectedItem();
            if (s.getJezik().getJezikID() != p.getJezik().getJezikID()) {
                JOptionPane.showMessageDialog(this, "Student mora da slusa isti jezik kog profesor predaje!", "Error", JOptionPane.ERROR_MESSAGE);
                return;
            }
            Date sadasnjiDatum = new Date();

            String zakazanDatumString = jTextDate.getText().trim();

            if (!proveriDatum(zakazanDatumString, format)) {
                JOptionPane.showMessageDialog(this, "Niste pravilno uneli datum!", "Error", JOptionPane.ERROR_MESSAGE);
                System.out.println("Datum je neispravan");
                return;
            }
            Date zakazanDatum = format.parse(zakazanDatumString);

            if (zakazanDatum.before(sadasnjiDatum)) {
                JOptionPane.showMessageDialog(this, "Datum zakazivanja termina ne moze biti pre sadasnjeg datuma!", "Error", JOptionPane.ERROR_MESSAGE);
                return;
            }
            TerminCasa noviZakazaniTermin = new TerminCasa(zakazanTermin.getTerminCasaID(),
                zakazanDatum, p, s, dokumenti);
            if (noviZakazaniTermin.getDokumenti().isEmpty()) {
                throw new Exception("Termin ne moze da se zakaze bez ikakvog dokumenta.");
            }
            Response response = KontrolerKorisnickogInterfejsa.getInstance().izmeniTerminCasa(noviZakazaniTermin);
            if (response.isSuccessful()) {
                JOptionPane.showMessageDialog(this, "Sistem je uspesno izmenio termin.");
                Dokument dokument = new Dokument();
                dokument.setTerminCasa(noviZakazaniTermin);
                this.stariDokumenti = KontrolerKorisnickogInterfejsa.getInstance().ucitajDokumenteUslov(dokument);
                this.parentForm.prepareTable();
            } else {
                JOptionPane.showMessageDialog(this, "Sistem ne moze da izmeni termin", "Greška", JOptionPane.ERROR_MESSAGE);
            }
        } catch (Exception ex) {
            ex.printStackTrace();
            //            JOptionPane.showMessageDialog(this, "Class appoitment is not saved! " + "", "Error", JOptionPane.ERROR_MESSAGE);
            JOptionPane.showMessageDialog(this, ex.getMessage(), "", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jButtonSaveActionPerformed

    public boolean proveriDatum(String unetiDatum, SimpleDateFormat format) {
        format.setLenient(false);
        try {
            format.parse(unetiDatum);
            return true;
        } catch (ParseException e) {
            return false;
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jBtnFilterProfessor;
    private javax.swing.JButton jBtnFilterStudent;
    private javax.swing.JButton jButtonAddDocument;
    private javax.swing.JButton jButtonDeleteDocument;
    private javax.swing.JButton jButtonSave;
    private javax.swing.JComboBox jComboBoxProfessor;
    private javax.swing.JComboBox jComboBoxStudent;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField jTextDate;
    private javax.swing.JTextField jTextNaslov;
    private javax.swing.JTextPane jTextPaneKomentar;
    private javax.swing.JTable tblDocuments;
    // End of variables declaration//GEN-END:variables

    private void prepareForm() {
        fillProfessors();
        fillStudents();

        jTextDate.setText(format.format(zakazanTermin.getDatumTermina()));
        DokumentTableModel model = new DokumentTableModel(zakazanTermin.getDokumenti());
        tblDocuments.setModel(model);

    }

    private void fillStudents() {
        try {
            jComboBoxStudent.removeAllItems();

            studenti = KontrolerKorisnickogInterfejsa.getInstance().ucitajSveStudente();
            for (Student s : studenti) {
                jComboBoxStudent.addItem(s);
            }
            jComboBoxStudent.setSelectedItem(zakazanTermin.getStudent());

        } catch (Exception ex) {
            ex.printStackTrace();
            JOptionPane.showMessageDialog(this, "Sistem ne može da učita studente!" + ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
    }

    private void fillProfessors() {
        try {
            jComboBoxProfessor.removeAllItems();

            profesori = KontrolerKorisnickogInterfejsa.getInstance().ucitajSveProfesore();
            for (Profesor p : profesori) {
                jComboBoxProfessor.addItem(p);
            }
            jComboBoxProfessor.setSelectedItem(zakazanTermin.getProfesor());

        } catch (Exception ex) {
            ex.printStackTrace();
            JOptionPane.showMessageDialog(this, "Sistem ne može da učita profesore!" + ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }

    }
}
